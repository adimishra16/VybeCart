@model List<Ecommerce.Models.ViewModels.ProductViewModel>

@{
    ViewBag.Title = "Home";
}

<nav>
    @RenderPage("~/Views/Shared/_Header.cshtml")
</nav>

<!-- Top Bar -->
<div class="top-bar d-flex justify-content-between align-items-center px-4 py-3 bg-white shadow-sm">
    <!-- Search Bar -->
    <div class="search-container position-relative">
        <form class="form-inline" id="searchForm">
            <div class="search-box d-flex align-items-center">
                <input class="form-control search-input" type="search" id="searchInput" placeholder="Search for products..." aria-label="Search">
                <i class="fas fa-search search-icon"></i>
            </div>
        </form>
        <ul id="searchSuggestions" class="list-group position-absolute bg-white shadow d-none"></ul>
    </div>

    <!-- User Info -->
    <div class="user-info ml-auto d-flex align-items-center">
        <span id="Hello" class="font-weight-bold d-flex align-items-center">
            <img src="~/Images/Icons/hello.png" class="user-icon mr-2" alt="User Icon">
            <h1 class="mb-0">Hello, @Session["FirstName"] @Session["LastName"]</h1>
        </span>
    </div>
</div>


<!-- Best Selling Products Section -->
@if (Model.Any(p => p.IsBestSelling))
{
    <h2 class="text-center mt-4">🔥 Best Selling Products</h2>
    <div class="container">
        <div class="row">
            @foreach (var product in Model.Where(p => p.IsBestSelling))
            {
                <div class="col-md-4 mb-4">
                    <div class="card shadow-sm rounded-lg border-0 position-relative">
                        <!-- Clickable Product Image -->
                        <a href="@Url.Action("ProductDetails", "Product", new { productId = product.ProductId })">
                            <img src="@Url.Content(product.ProductImagePath)" class="card-img-top" alt="@product.ProductTitle" style="height: 250px; object-fit: cover;">
                        </a>

                        <!-- Best Selling Tag -->
                        @if (product.IsBestSelling)
                        {
                            <span class="badge badge-danger position-absolute top-0 start-0 m-2 p-2 font-weight-bold">Best Selling</span>
                        }

                        <div class="card-body text-center">
                            <h5 class="card-title font-weight-bold text-dark">@product.ProductTitle</h5>
                            <p class="card-text text-muted"><strong>Category:</strong> @product.Category</p>
                            <p class="card-text text-dark"><strong>Price:</strong> @product.Price INR</p>

                            <!-- Buttons for Add to Cart and Wishlist -->
                            <div class="btn-group d-flex flex-column">
                                <!-- Add to Cart Button -->
                                <button type="button" class="btn btn-primary mb-2" id="addToCartBtn_@product.ProductId" data-product-id="@product.ProductId">
                                    <i class="fas fa-shopping-cart"></i> Add to Cart
                                </button>

                                <!-- Add to Wishlist Button -->
                                <button type="button" class="btn btn-danger mb-2" id="addToWishlistBtn_@product.ProductId" data-product-id="@product.ProductId">
                                    <img id="wishlistIconImage_@product.ProductId" src="~/Images/Icons/heart_unfilled.png" style="width: 20px; height: 20px; margin-right: 10px;">
                                    <span id="wishlistBtnText_@product.ProductId">Add to Wishlist</span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
}
<!-- Top 5 Categories Section -->
<div class="top-categories">
    <h3>Top 5 Best-Selling Categories</h3>
    <div class="row row-cols-2 row-cols-md-5 g-3">
        @foreach (var category in ViewBag.Categories)
        {
            <div class="col">
                <a href="@Url.Action("Category", "Product", new { category = category.CategoryName })" class="category-link">
                    <div class="category-item text-center">
                        <img src="@category.IconPath" alt="@category.CategoryName Icon" class="category-icon img-fluid" />
                        <span class="category-name d-block mt-2">@category.CategoryName</span>
                    </div>
                </a>
            </div>
        }
    </div>
</div>

<!-- Products by Category -->
<h2 class="text-center mt-4">📢 Featured Categories</h2>
<div class="container">
    @foreach (var categoryGroup in Model.GroupBy(p => p.Category))
    {
        var bestProduct = categoryGroup.OrderByDescending(p => p.IsBestSelling).FirstOrDefault();
        if (bestProduct != null)
        {
            <h3 class="text-left mt-4">@categoryGroup.Key</h3>
            <div class="row">
                @foreach (var product in categoryGroup.OrderByDescending(p => p.IsBestSelling))
                {
                    <div class="col-md-4 mb-4">
                        <div class="card shadow-sm rounded-lg border-0 position-relative">
                            <!-- Clickable Product Image -->
                            <a href="@Url.Action("ProductDetails", "Product", new { productId = product.ProductId })">
                                <img src="@Url.Content(product.ProductImagePath)" class="card-img-top" alt="@product.ProductTitle" style="height: 250px; object-fit: cover;">
                            </a>

                            <!-- Best Selling Tag -->
                            @if (product.IsBestSelling)
                            {
                                <span class="badge badge-danger position-absolute top-0 start-0 m-2 p-2 font-weight-bold">Best Selling</span>
                            }

                            <div class="card-body text-center">
                                <h5 class="card-title font-weight-bold text-dark">@product.ProductTitle</h5>
                                <p class="card-text text-muted"><strong>Category:</strong> @product.Category</p>
                                <p class="card-text text-dark"><strong>Price:</strong> @product.Price INR</p>

                                <!-- Buttons for Add to Cart and Wishlist -->
                                <div class="btn-group d-flex flex-column">
                                    <!-- Add to Cart Button -->
                                    <button type="button" class="btn btn-primary mb-2" id="addToCartBtn_@product.ProductId" data-product-id="@product.ProductId">
                                        <i class="fas fa-shopping-cart"></i> Add to Cart
                                    </button>

                                    <!-- Add to Wishlist Button -->
                                    <button type="button" class="btn btn-danger mb-2" id="addToWishlistBtn_@product.ProductId" data-product-id="@product.ProductId">
                                        <img id="wishlistIconImage_@product.ProductId" src="~/Images/Icons/heart_unfilled.png" style="width: 20px; height: 20px; margin-right: 10px;">
                                        <span id="wishlistBtnText_@product.ProductId">Add to Wishlist</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>

                }
            </div>
        }
    }
</div>

<footer>
    @RenderPage("~/Views/Home/Footer.cshtml")
</footer>


<style>
    footer {
        max-width: 100%;
    }
    /* Styling for the top bar */
    .top-bar {
        margin-top: 90px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
    }

        .top-bar form {
            flex-grow: 1;
            display: flex;
            justify-content: center;
        }

        .top-bar .user-info {
            display: flex;
            font-size: 18px;
            margin-top: 60px;
        }

    #Hello {
        align-items: flex-end;
    }
    /* Navbar Styling */
    .navbar-nav {
        margin-left: 10px;
    }

        .navbar-nav .nav-item {
            margin-right: 20px; /* Adds space between nav items */
        }

    .navbar-icons a {
        margin-right: 20px; /* Adds margin between icons */
    }

    .navbar-brand {
        font-size: 1.5rem;
    }

    .navbar-light .navbar-nav .nav-link {
        color: #495057;
        font-size: 1rem;
    }

        .navbar-light .navbar-nav .nav-link:hover {
            color: #007bff;
        }

    /* Hover effect on the icons */
    .navbar-icons a:hover {
        color: #007bff;
    }

    /* Style adjustments for the icon buttons in navbar */
    .navbar-icons a i, .navbar-icons a img {
        font-size: 24px;
    }

    /* Adjust the position of the user greeting text */
    .top-bar .user-info h1 {
        font-size: 1.5rem;
    }

    /* Hover effect on the cards */
    .card {
        border-radius: 10px;
        overflow: hidden;
        transition: transform 0.3s ease-in-out;
    }

        .card:hover {
            transform: translateY(-10px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    /* Card image styling */
    .card-img-top {
        width: 100%;
        height: 250px;
        object-fit: cover;
        border-bottom: 1px solid #e4e6eb;
    }

    /* Card body padding */
    .card-body {
        padding: 20px;
    }

    .btn-block {
        width: 100%;
    }

    /* Button and icon styling */
    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

    .btn-outline-danger img {
        vertical-align: middle;
        margin-right: 5px;
    }

    /* Adjust the product list and spacing */
    .row {
        margin-top: 30px;
    }

    .card-title {
        font-size: 1.2rem;
        font-weight: bold;
    }

    .card-text {
        font-size: 0.9rem;
    }

    /* Styling for the error message */
    .alert-custom {
        background-color: #f8d7da;
        color: #721c24;
        border-color: #f5c6cb;
        border-radius: 5px;
        padding: 10px;
        margin-top: 20px;
    }

        .alert-custom .close {
            color: #721c24;
            opacity: 1;
            font-size: 1.25rem;
        }

            .alert-custom .close:hover {
                color: #5a1a1a;
            }

    /* Update the Add to Wishlist button */
    .btn-danger {
        background-color: #f8f9fa; /* Lighter background */
        border-color: #f8f9fa; /* Matching border color */
        color: #dc3545; /* Ensure the icon and text have a distinct color */
    }

        .btn-danger:hover {
            background-color: #e2e6ea; /* Slightly darker background on hover */
            border-color: #e2e6ea; /* Matching border color */
            color: #dc3545; /* Keep the color of the icon and text */
        }

        /* Adjust the heart icon for better visibility */
        .btn-danger img {
            vertical-align: middle;
            margin-right: 10px;
            filter: brightness(0) saturate(100%) invert(42%) sepia(68%) saturate(1063%) hue-rotate(1deg) brightness(98%) contrast(96%);
        }

    .badge-danger {
        background-color: #dc3545;
        color: white;
        font-size: 14px;
        border-radius: 5px;
    }

    #searchSuggestions {
        width: 300px;
        max-height: 200px;
        overflow-y: auto;
        position: absolute;
        z-index: 1000;
    }

        #searchSuggestions .list-group-item {
            cursor: pointer;
            padding: 10px;
            transition: background 0.2s;
        }

            #searchSuggestions .list-group-item:hover {
                background-color: #f8f9fa;
            }

    /* Style the search bar */
    #searchForm {
        position: relative;
        width: auto; /* Set a fixed width */
        border-radius: 25px;
        overflow: hidden;
        border: 2px solid #007bff; /* Blue border */
        background: white;
        display: flex;
        align-items: center;
    }

    #searchInput {
        width: 100%;
        padding: 10px 15px;
        border: none;
        outline: none;
        font-size: 16px;
    }

    #searchForm i {
        margin-left: 20px;
        position: center;
        right: 10px;
        color: #007bff;
        font-size: 18px;
    }

    /* Adjusting the top-bar layout */
    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
    }

        .top-bar .user-info {
            font-size: 18px;
            display: flex;
            align-items: center;
        }

            .top-bar .user-info h1 {
                font-size: 1.5rem;
                margin: 0;
                white-space: nowrap;
            }
    /* Footer Styling */
    footer {
        max-width: 100%;
    }

    /* Top Bar Styling */
    .top-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
    }

    /* Center the search bar */
    .search-container {
        position: relative;
        width: auto; /* Adjust width as needed */
        margin: 0 auto;
        text-align: center;
    }

    .search-form {
        display: flex;
        align-items: center;
        border-radius: 25px;
        overflow: hidden;
        background: white;
        padding: 5px;
        width: 100%;
    }

    /*    .search-input {
        flex-grow: 1;
        border: none;
        outline: none;
        font-size: 16px;
        padding: 10px;
    }*/

    /* Search Suggestions */
    #searchSuggestions {
        width: 100%;
        max-height: 200px;
        overflow-y: auto;
        position: absolute;
        z-index: 1000;
        left: 0;
    }

        #searchSuggestions .list-group-item {
            cursor: pointer;
            padding: 10px;
            transition: background 0.2s;
        }

            #searchSuggestions .list-group-item:hover {
                background-color: #f8f9fa;
            }

    /* Adjust the position of the user greeting text */
    .top-bar .user-info h1 {
        font-size: 1.5rem;
    }

    .top-categories {
        text-align: center;
        margin: 40px 0;
    }

    .category-item {
        padding: 10px;
        /*        border:;*/
        /*        border-radius: 8px;*/
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .category-item:hover {
            transform: scale(1.05);
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
        }

    .category-icon {
        width: 80px;
        height: 80px;
        object-fit: cover;
        /*        border-radius: 50%;*/
    }

    .category-name {
        font-weight: bold;
        color: #333;
    }

    .category-link {
        text-decoration: none;
        color: inherit;
    }
    /* Top Bar Styling */
.top-bar {
    background: #fff;
    border-bottom: 2px solid #f8f9fa;
}

/* Search Bar Styling */
.search-container {
    position: relative;
    max-width: 300px;
}

.search-box {
    position: relative;
    width: 100%;
}

.search-input {
    width: 100%;
    padding: 10px 40px 10px 15px;
    border-radius: 20px;
    border: 1px solid #ddd;
    transition: all 0.3s ease-in-out;
}

.search-input:focus {
    border-color: #007bff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.2);
}

/* Search Icon */
.search-icon {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    color: #888;
    cursor: pointer;
}

/* Search Suggestions Dropdown */
#searchSuggestions {
    width: 100%;
    top: 42px;
    z-index: 1000;
    border-radius: 5px;
    max-height: 200px;
    overflow-y: auto;
    display: none;
}

#searchSuggestions .list-group-item {
    cursor: pointer;
    transition: background 0.3s ease-in-out;
}

#searchSuggestions .list-group-item:hover {
    background: #f8f9fa;
}

/* User Info Styling */
.user-info {
    font-size: 1.2rem;
    color: #333;
}

.user-icon {
    width: 40px;
    height: 40px;
    border-radius: 50%;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .top-bar {
        flex-direction: column;
        align-items: center;
        text-align: center;
    }

    .search-container {
        margin-bottom: 10px;
        width: 100%;
    }

    .user-info h1 {
        font-size: 1rem;
    }
}
</style>

<!-- Add Font Awesome for Icons -->
<script src="https://kit.fontawesome.com/a076d05399.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

<script>
    $(document).ready(function () {
        // Handle Add to Cart Button click event
        $(".container").on("click", ".btn-primary", function () {
            var productId = $(this).data("product-id");
            var button = $('#addToCartBtn_' + productId);
            var originalText = button.html(); // Store original button text

            // Send AJAX request to add product to the cart
            $.ajax({
                url: '@Url.Action("AddToCart", "Home")',
                type: 'POST',
                data: { productId: productId },
                success: function (response) {
                    if (response.success) {
                        button.html('<i class="fas fa-check-circle"></i> Added');
                        button.prop('disabled', true);
                        setTimeout(function () {
                            button.html(originalText); // Restore original text
                            button.prop('disabled', false);
                        }, 2000);
                    } else {
                        showError(response.message);
                    }
                },
                error: function () {
                    showError('Error adding product to cart.');
                }
            });
        });

        // Handle Add to Wishlist Button click event
        $(".container").on("click", ".btn-danger", function () {
            var productId = $(this).data("product-id");
            var button = $('#addToWishlistBtn_' + productId);
            var icon = button.find("i");
            var buttonText = button.find("span");

            // Check if product is already in wishlist
            var isAdded = (buttonText.text() === "Added");

            // Send AJAX request to toggle wishlist
            $.ajax({
                url: '@Url.Action("ToggleWishlist", "Home")',
                type: 'POST',
                data: { productId: productId, isAdded: isAdded },
                success: function (response) {
                    if (response.success) {
                        if (isAdded) {
                            // Product removed from wishlist
                            buttonText.text('Add to Wishlist');
                            icon.attr('src', '~/Images/Icons/heart_unfilled.png');
                        } else {
                            // Product added to wishlist
                            buttonText.text('Added');
                            icon.attr('src', '~/Images/Icons/heart_filled.png');
                        }
                    } else {
                        showError(response.message);
                    }
                },
                error: function () {
                    showError('Error adding/removing product from wishlist.');
                }
            });
        });

        // Show error message
        function showError(message) {
            $(".alert-custom").text(message).show();
        }
    });

</script>
<script>
    $(document).ready(function () {
        $("#searchInput").on("keyup", function () {
            let query = $(this).val().trim();

            if (query.length === 0) {
                $("#searchSuggestions").empty().addClass("d-none");
                return;
            }

            $.ajax({
                url: "/Home/SearchProducts",
                type: "GET",
                data: { query: query },
                success: function (data) {
                    $("#searchSuggestions").empty();

                    if (data.length === 0) {
                        $("#searchSuggestions").append('<li class="list-group-item text-muted">No results found</li>');
                    } else {
                        $.each(data, function (index, product) {
                            $("#searchSuggestions").append(`
                            <li class="list-group-item">
                                <a href="/Product/ProductDetails?productId=${product.id}" class="d-flex align-items-center text-decoration-none">
                                    <img src="${product.image}" class="mr-2" style="width: 40px; height: 40px;">
                                    ${product.title}
                                </a>
                            </li>
                        `);
                        });
                    }

                    $("#searchSuggestions").removeClass("d-none");
                }
            });
        });

        // Hide suggestions when clicking outside
        $(document).click(function (e) {
            if (!$(e.target).closest("#searchForm").length) {
                $("#searchSuggestions").empty().addClass("d-none");
            }
        });
    });

</script>