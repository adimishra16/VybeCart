@model List<Ecommerce.Models.ViewModels.CartItemViewModel>

<nav>
    @RenderPage("~/Views/Shared/_Header.cshtml")
</nav>
<h2>Your Shopping Cart</h2>

@if (Model.Count == 0)
{
    <div class="text-center">
        <p>Your cart is empty.</p>
        <img src="~/Images/Icons/empty_cart.png" class="img-fluid" style="max-width: 100%; height: auto;" />
        <a href="/Home/Index"><button class="btn btn-primary mt-3">Back to Home Page</button></a>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>Product</th>
                    <th>Price</th>
                    <th>Quantity</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr id="row_@item.ProductId" class="product-row">
                        <td>@item.ProductTitle</td>
                        <td id="price_@item.ProductId">@item.Price</td>

                        <!-- Quantity with increment and decrement buttons -->
                        <td>
                            <div class="input-group">
                                <button class="btn btn-outline-secondary" type="button" id="decrement_@item.ProductId" data-product-id="@item.ProductId">-</button>
                                <input class="form-control" id="quantity_@item.ProductId" value="@item.Quantity" min="1" data-product-id="@item.ProductId" />
                                <button class="btn btn-outline-secondary" type="button" id="increment_@item.ProductId" data-product-id="@item.ProductId">+</button>
                            </div>
                        </td>

                        <td id="total_@item.ProductId">@item.TotalPrice</td>

                        <td>
                            <!-- Remove Button -->
                            <button class="btn btn-danger remove-btn" data-product-id="@item.ProductId" id="removeBtn_@item.ProductId">Remove</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <!-- Total Price Section for Each Product -->
        <div class="mt-3">
            <h4><strong>Total of All Products in Cart:</strong> ₹ <span id="totalPrice">@Model.Sum(item => item.TotalPrice)</span></h4>
        </div>

        <!-- Checkout Section -->
        <div class="mt-3">
            <a href="/Order/Checkout" class="btn btn-success checkout-btn">Proceed to Checkout</a>
        </div>
    </div>
}

<!-- Include necessary scripts for AJAX handling -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        $(".btn-outline-secondary").click(function () {
            var productId = $(this).data("product-id");
            var action = $(this).text().trim(); // Get action (+ or -)
            var quantityInput = $("#quantity_" + productId);
            var price = parseFloat($("#price_" + productId).text());
            var quantity = parseInt(quantityInput.val());

            // ✅ Increment or decrement the quantity
            if (action === "+") {
                quantity++;
            } else if (action === "-" && quantity > 1) {
                quantity--;
            }

            // ✅ Update the quantity input field
            quantityInput.val(quantity);

            // ✅ Update total price for this product
            var totalPrice = quantity * price;
            $("#total_" + productId).text(totalPrice.toFixed(2));

            // ✅ Update the overall total price
            updateTotalPrice();

            // ✅ Send AJAX request to update quantity in session & database
            updateCartQuantity(productId, quantity);
        });

        // ✅ Function to send AJAX request to update quantity in the database
        function updateCartQuantity(productId, quantity) {
            $.ajax({
                url: '/Home/UpdateCartQuantity',
                type: 'POST',
                data: { productId: productId, quantity: quantity },
                success: function (response) {
                    if (response.success) {
                        console.log("Quantity updated successfully in database.");
                    } else {
                        console.log("Error updating quantity in database.");
                    }
                },
                error: function () {
                    console.log("Error while updating quantity in database.");
                }
            });
        }

        // ✅ Remove item from cart
        $(".remove-btn").click(function () {
            var productId = $(this).data("product-id");

            $.ajax({
                url: '/Home/RemoveItem',
                type: 'POST',
                data: { productId: productId },
                success: function (response) {
                    if (response.success) {
                        $("#row_" + productId).remove();
                        updateTotalPrice();
                    } else {
                        alert("Error removing item");
                    }
                },
                error: function () {
                    alert("Error while removing item");
                }
            });
        });
        function updateCartQuantity(productId, quantity) {
            $.ajax({
                url: '/Home/UpdateCartQuantity',
                type: 'POST',
                data: { productId: productId, quantity: quantity },
                success: function (response) {
                    if (response.success) {
                        console.log("Quantity updated successfully in Shopping_cart_1460.");
                    } else {
                        console.log("Error updating quantity in Shopping_cart_1460.");
                    }
                },
                error: function () {
                    console.log("Error while updating quantity in Shopping_cart_1460.");
                }
            });
        }
        // ✅ Update the overall total price
        function updateTotalPrice() {
            var total = 0;
            $(".table tbody tr").each(function () {
                var totalPrice = parseFloat($(this).find('td:nth-child(4)').text());
                total += totalPrice;
            });
            $("#totalPrice").text(total.toFixed(2));
        }
    });
</script>

<!-- Add custom CSS for the design improvements -->
<style>
    h2{
        margin-top:90px;
    }
    /* Table styling */
    .table {
        width: 100%;
        border-collapse: collapse;
    }

    .thead-dark {
        background-color: #343a40;
        color: #fff;
    }

    .table td, .table th {
        padding: 12px;
        text-align: left;
    }

    .product-row {
        transition: background-color 0.3s ease;
    }

    .product-row:hover {
        background-color: #f1f1f1;
    }

    /* Button styling */
    .btn {
        transition: all 0.3s ease;
    }

    .btn:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .remove-btn {
        background-color: #ff4747;
        color: white;
        border: none;
    }

    .remove-btn:hover {
        background-color: #ff1a1a;
    }

    .checkout-btn {
        background-color: #28a745;
        color: white;
        border: none;
    }

    .checkout-btn:hover {
        background-color: #218838;
    }

    /* Total Price Section */
    #totalPrice {
        font-weight: bold;
        color: #333;
        font-size: 1.2em;
    }

    /* Input group for quantity */
    .input-group {
        width: 200px;
        margin: auto;
    }

    .form-control {
        text-align: center;
    }

    /* Image styles */
    img {
        max-width: 100%;
        height: auto;
        animation: fadeIn 1s ease-out;
    }

</style>
